import{_ as s,r as i,o as c,c as n,a as e,b as d,w as r,e as o,d as t}from"./app.1e1d5899.js";const l={},p=o(`<h1 id="statistics" tabindex="-1"><a class="header-anchor" href="#statistics" aria-hidden="true">#</a> Statistics</h1><p>V2Ray provides some statistics about its operations.</p><h2 id="statsobject" tabindex="-1"><a class="header-anchor" href="#statsobject" aria-hidden="true">#</a> StatsObject</h2><p><code>StatsObject</code> corresponds to the <code>stats</code> item in the configuration file.</p><div class="language-json ext-json line-numbers-mode"><pre class="language-json"><code><span class="token punctuation">{</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div>`,5),g=t("Currently, there are no parameters for statistics; as long as the "),u=e("code",null,"StatsObject",-1),f=t(" item exists, the statistics module will be enabled. You need to enable the corresponding parameters in "),b=t("Local Policies"),h=t(" to be able to collect the corresponding telemetry."),k=o('<p>Currently available statistics:</p><h2 id="user-data" tabindex="-1"><a class="header-anchor" href="#user-data" aria-hidden="true">#</a> User Data</h2><blockquote><p><code>user&gt;&gt;&gt; [email] &gt;&gt;&gt; traffic&gt;&gt;&gt; uplink</code></p></blockquote><p>The uplink traffic of a specific user, in bytes.</p><blockquote><p><code>user&gt;&gt;&gt; [email] &gt;&gt;&gt; traffic&gt;&gt;&gt; downlink</code></p></blockquote><p>The downlink traffic of a specific user, in bytes.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>If the corresponding user does not specify an Email, statistics won&#39;t be recorded.</p></div><h2 id="global-data" tabindex="-1"><a class="header-anchor" href="#global-data" aria-hidden="true">#</a> Global Data</h2><blockquote><p><code>inbound&gt;&gt;&gt; [tag] &gt;&gt;&gt; traffic&gt;&gt;&gt; uplink</code></p></blockquote><p>The uplink traffic of a specific inbound, in bytes.</p><blockquote><p><code>inbound&gt;&gt;&gt; [tag] &gt;&gt;&gt; traffic&gt;&gt;&gt; downlink</code></p></blockquote><p>The downlink traffic of a specific inbound, in bytes.</p><blockquote><p><code>outbound&gt;&gt;&gt; [tag] &gt;&gt;&gt; traffic&gt;&gt;&gt; uplink</code></p></blockquote><p>(Since v4.26.0) The uplink traffic of a specific outbound, in bytes.</p><blockquote><p><code>outbound&gt;&gt;&gt; [tag] &gt;&gt;&gt; traffic&gt;&gt;&gt; downlink</code></p></blockquote><p>(Since v4.26.0) The downlink traffic of a specific outbound, in bytes.</p>',16);function _(m,v){const a=i("RouterLink");return c(),n("div",null,[p,e("p",null,[g,u,f,d(a,{to:"/en_US/config/policy.html"},{default:r(()=>[b]),_:1}),h]),k])}const y=s(l,[["render",_],["__file","stats.html.vue"]]);export{y as default};
